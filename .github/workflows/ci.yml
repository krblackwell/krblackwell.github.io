name: CI Pipeline

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Python linting (flake8) - see config
        run: flake8

      - name: Markdown linting - see config
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
            globs: |
              docs/**/*.md
              docs/**/*.mdx
              blog/**/*.md
              blog/**/*.mdx
            config: .markdownlint-cli2.yaml

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.2'

      - name: Install npm dependencies
        run: npm ci

      - name: check if python dictionary is there
        run: npm list --depth=0
      
      - name: do a listing
        run: ls -ahtlr
        
      - name: cd node_modules
        run: cd node_modules
# this failed - probably didn't find a match      
#      - name: grep for python dictionary
#        run: ls -ahtlr | grep -i python

      - name: Install cspell Python dictionary
        run: npm install -D @cspell/dict-python
        
      - name: AFTER DICTIONARY INSTALL check if python dictionary is there
        run: npm list --depth=0
      
      - name: do a listing
        run: ls -ahtlr
        
      - name: cd node_modules
        run: cd node_modules

      - name: grep for python dictionary
         run: ls -ahtlr | grep -i python
      - name: Spell check markdown (cspell) - see config
        uses: streetsidesoftware/cspell-action@v7
        with:
          config: cspell.config.json

      - name: Run notebook tests
        run: pytest --nbval notebooks

      - name: Run unit tests
        run: pytest



      - name: Build project
        run: npm run build

        # this looks like it requires a token
      # - name: Link checker (lychee)
       # uses: lycheeverse/lychee-action@v2
       # with:
       #   args: --verbose

