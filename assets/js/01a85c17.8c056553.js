"use strict";(self.webpackChunklearn_coding_fun_projects=self.webpackChunklearn_coding_fun_projects||[]).push([[209],{9158:(e,t,s)=>{s.r(t),s.d(t,{default:()=>x});s(6540);var a=s(4164),r=s(1312);const n=()=>(0,r.T)({id:"theme.tags.tagsPageTitle",message:"Tags",description:"The title of the tag list page"});var l=s(5500),c=s(7559),i=s(8027),o=s(6133),g=s(1107);const p={tag:"tag_Nnez"};var u=s(4848);function d({letterEntry:e}){return(0,u.jsxs)("article",{children:[(0,u.jsx)(g.A,{as:"h2",id:e.letter,children:e.letter}),(0,u.jsx)("ul",{className:"padding--none",children:e.tags.map((e=>(0,u.jsx)("li",{className:p.tag,children:(0,u.jsx)(o.A,{...e})},e.permalink)))}),(0,u.jsx)("hr",{})]})}function h({tags:e}){const t=function(e){const t={};return Object.values(e).forEach((e=>{const s=function(e){return e[0].toUpperCase()}(e.label);t[s]??=[],t[s].push(e)})),Object.entries(t).sort((([e],[t])=>e.localeCompare(t))).map((([e,t])=>({letter:e,tags:t.sort(((e,t)=>e.label.localeCompare(t.label)))})))}(e);return(0,u.jsx)("section",{className:"margin-vert--lg",children:t.map((e=>(0,u.jsx)(d,{letterEntry:e},e.letter)))})}var j=s(1463);function x({tags:e,sidebar:t}){const s=n();return(0,u.jsxs)(l.e3,{className:(0,a.A)(c.G.wrapper.blogPages,c.G.page.blogTagsListPage),children:[(0,u.jsx)(l.be,{title:s}),(0,u.jsx)(j.A,{tag:"blog_tags_list"}),(0,u.jsxs)(i.A,{sidebar:t,children:[(0,u.jsx)(g.A,{as:"h1",children:s}),(0,u.jsx)(h,{tags:e})]})]})}}}]);