"use strict";(self.webpackChunklearn_coding_fun_projects=self.webpackChunklearn_coding_fun_projects||[]).push([[2206],{8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var o=s(6540);const a={},t=o.createContext(a);function i(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(t.Provider,{value:n},e.children)}},9960:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"python/foundations/naming-conventions","title":"naming-conventions","description":"How to name variables in Python.","source":"@site/docs/python/01-foundations/04-naming-conventions.md","sourceDirName":"python/01-foundations","slug":"/python/foundations/naming-conventions","permalink":"/docs/python/foundations/naming-conventions","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"python","permalink":"/docs/tags/python"},{"inline":true,"label":"foundations","permalink":"/docs/tags/foundations"},{"inline":true,"label":"naming","permalink":"/docs/tags/naming"}],"version":"current","lastUpdatedAt":1751083200000,"sidebarPosition":4,"frontMatter":{"sidebar_label":"naming conventions","sidebar_position":4,"last_update":{"date":"6/28/25","author":"krblackwell"},"description":"How to name variables in Python.","tags":["python","foundations","naming"],"draft":false,"unlisted":false,"hide_table_of_contents":true},"sidebar":"pythonSidebar","previous":{"title":"f-strings","permalink":"/docs/python/foundations/f-string"},"next":{"title":"string methods","permalink":"/docs/python/foundations/string-methods"}}');var a=s(4848),t=s(8453);const i={sidebar_label:"naming conventions",sidebar_position:4,last_update:{date:"6/28/25",author:"krblackwell"},description:"How to name variables in Python.",tags:["python","foundations","naming"],draft:!1,unlisted:!1,hide_table_of_contents:!0},r="What do I call stuff in Python?",l={},c=[{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"\u274c No nos",id:"-no-nos",level:2},{value:"\u2139\ufe0f Things to know",id:"\u2139\ufe0f-things-to-know",level:2},{value:"\u2139\ufe0f Underscores as the first character",id:"\u2139\ufe0f-underscores-as-the-first-character",level:3},{value:"\u2139\ufe0f Snake case",id:"\u2139\ufe0f-snake-case",level:3},{value:"Good names",id:"good-names",level:2},{value:"\u2705 Descriptive, \u2705 Snake case, \u2705 Starts with a letter",id:"-descriptive--snake-case--starts-with-a-letter",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("a",{href:"/lite/lab/index.html?path=python/01-foundations/04-naming-conventions.ipynb",target:"_blank",children:(0,a.jsx)("img",{src:"https://jupyterlite.rtfd.io/en/latest/_static/badge.svg",alt:"Open in the Lab!"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/",children:"Go back to Home"})," - ",(0,a.jsx)(n.a,{href:"/docs/python/foundations/naming-conventions",children:"Go to lesson page"})," - ",(0,a.jsx)(n.a,{href:"/docs/python/foundations",children:"Go to Foundations section"})]}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"what-do-i-call-stuff-in-python",children:"What do I call stuff in Python?"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Naming conventions"})," are rules for giving things a name. We're going to focus this lesson on naming variables. As you learn, you'll grow in your understanding of this concept."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u274c No nos"}),"\n",(0,a.jsx)(n.li,{children:"\u2139\ufe0f Things to know"}),"\n",(0,a.jsx)(n.li,{children:"\u2705 Good names"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,a.jsx)(n.p,{children:"In this notebook, you'll learn about how to name variables."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"You'll learn how not to name things, and some things to watch out for."}),"\n",(0,a.jsx)(n.li,{children:"You'll see examples of good names."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"-no-nos",children:"\u274c No nos"}),"\n",(0,a.jsx)(n.p,{children:"You're not allowed to use some things to name a variable:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u274c starting with a number"}),"\n",(0,a.jsx)(n.li,{children:"\u274c symbols or punctuation like $, %, , @"}),"\n",(0,a.jsxs)(n.li,{children:["\u274c ",(0,a.jsx)(n.code,{children:"reserved words"})," - like ",(0,a.jsx)(n.code,{children:"break"})," ",(0,a.jsx)(n.code,{children:"class"})," ",(0,a.jsx)(n.code,{children:"except"})," ",(0,a.jsx)(n.code,{children:"finally"})," ",(0,a.jsx)(n.code,{children:"True"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:'Create cells below or use the cell and see what error messages you get when you do any of the "no nos."'}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"You might not understand the errors, but this shows you that you might get error messages that don't tell you what's really wrong."})}),"\n",(0,a.jsxs)(n.p,{children:['"UsageError: Line magic function ',(0,a.jsx)(n.code,{children:"%var"})," not found.\" doesn't exactly tell you that you can't use that name for a variable."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# 1thing = "this will raise SyntaxError: invalid decimal literal"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# %var = "one"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# class = 3\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# var%name%3 = "zombie"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# what! = "no"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"\u2139\ufe0f-things-to-know",children:"\u2139\ufe0f Things to know"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u2139\ufe0f underscores _ mean something specific"}),"\n",(0,a.jsxs)(n.li,{children:["\u2139\ufe0f use ",(0,a.jsx)(n.code,{children:"snake_case"})]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"\u2139\ufe0f-underscores-as-the-first-character",children:"\u2139\ufe0f Underscores as the first character"}),"\n",(0,a.jsx)(n.p,{children:"Underscores have special meaning in Python at the beginning of a name. You use them in a certain way to tell other programmers (or future you) about the variables in your program."}),"\n",(0,a.jsxs)(n.p,{children:["Double underscores are called ",(0,a.jsx)(n.code,{children:"dunders"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'_secret = "you can see this"\n# but the underscore at the beginning means don\'t use it directly!\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"__top_secret = \"'double underscore' also means something specific\"\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'BadGuy = "allowed, but not snake case"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"\u2139\ufe0f-snake-case",children:"\u2139\ufe0f Snake case"}),"\n",(0,a.jsxs)(n.p,{children:["Python conventions for variable names and some other names follow ",(0,a.jsx)(n.code,{children:"snake case"}),". Spaces are replaced with an underscore _ and letters are usually all lowercase."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'type_of_animal = "marsupial"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'favorite_show = "Australian Dog Family"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"good-names",children:"Good names"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u2705 descriptive"}),"\n",(0,a.jsx)(n.li,{children:"\u2705 snake case"}),"\n",(0,a.jsx)(n.li,{children:"\u2705 start with a letter"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"We talked about a lot of things NOT to do, so here are examples of good names. When your programs get larger, you might have parts of them in different files. You'll be glad if you give your variables unique, descriptive names."}),"\n",(0,a.jsx)(n.h3,{id:"-descriptive--snake-case--starts-with-a-letter",children:"\u2705 Descriptive, \u2705 Snake case, \u2705 Starts with a letter"}),"\n",(0,a.jsxs)(n.p,{children:["In the ",(0,a.jsx)(n.a,{href:"/docs/python/foundations/projects/story-project-v1",children:'"Silly Stories" project'}),", variable names like ",(0,a.jsx)(n.code,{children:"noun1"})," are descriptive enough. You know you need a noun, but we don't want to give away anything about the story. It's ok to have a number without the underscore."]}),"\n",(0,a.jsxs)(n.p,{children:["If you make a game, you might want to know ",(0,a.jsx)(n.code,{children:"current_player"})," rather than player1 vs player2. Game logic would be based on whose turn it is, a current_player, rather than player1. ",(0,a.jsx)(n.code,{children:"current_player"})," is descriptive, starts with a letter, and is snake case!"]}),"\n",(0,a.jsxs)(n.p,{children:["Maybe you have something that gives you a True or False (like a yes or no) if you check for a winner: ",(0,a.jsx)(n.code,{children:"check_winner"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Try out some good names by creating new cells in ",(0,a.jsx)("a",{href:"/lite/lab/index.html?path=python/01-foundations/04-naming-conventions.ipynb",children:"the Lab"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'bad_name = "not descriptive"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'test_input = "this name can be fine"\nfake_input = "this can be ok too"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'zombie_npc = "A zombie lurches toward you!"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(n.p,{children:"In conclusion, we talked about good ideas for naming variables in Python. Names should be descriptive, start with a letter, and be snake_case!"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);